from mysite.channels.models import *from django.contrib import adminfrom django.http import HttpResponseclass ChannelAdmin(admin.ModelAdmin):    fieldsets = [        (None, {'fields': ['title', 'path', 'is_disabled']}),#        ('Date information', {'fields': ['created_at', 'updated_at'], 'classes': ['collapse']}),    ]    list_display = ('title', 'path', 'is_disabled', 'created_at', 'updated_at')#    list_filter = ['created_at']    search_fields = ['title']    list_per_page = 200class ConfigureAdmin(admin.ModelAdmin):    list_display = ('title', 'is_disabled', 'has_child')    list_editable = ['is_disabled']    list_filter = ['channel', 'parent']        def has_child(self, obj):        return obj.parent is None    has_child.short_description = 'Child'    def changelist_view(self, request, extra_context=None):        from django.contrib.admin.views.main import ChangeList         cl = ChangeList(request,                        self.model,                        list(self.list_display),                        self.list_display_links,                        self.list_filter,                        self.date_hierarchy,                        self.search_fields,                        self.list_select_related,                        self.list_per_page,                        self.list_editable,                        self) #        cl.formset = None        if extra_context is None:             extra_context = {}#        return HttpResponse(str(cl.get_query_set().filter(parent__id__exact=request.GET.parent__id__exact)))#        if kwargs.get('parent'): #            id = kwargs.get('parent')#            cl.result_list = cl.result_list.filter(parent__id__exact=id) ##            extra_context['extra_filter'] = "Only tagged %s" % tag#        else:#            cl.result_list = cl.result_list.filter(parent=None)#        extra_context['cl'] = cl        return super(ConfigureAdmin, self).changelist_view(request, extra_context=extra_context)#    def get_urls(self): #        from django.conf.urls.defaults import patterns, url #        urls = super(ConfigureAdmin, self).get_urls()#        return urlsadmin.site.register(Channel, ChannelAdmin)admin.site.register(Configure, ConfigureAdmin)