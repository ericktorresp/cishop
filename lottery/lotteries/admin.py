# -*- coding: utf-8 -*-from mysite.lotteries.models import *from django.contrib import adminfrom django import formsWEEK_CHOICES = (    (1, '一'), (2, '二'), (3, '三'), (4, '四'), (5, '五'), (6, '六'), (7, '日'))class LotteryAdminForm(forms.ModelForm):#    week_cycle = forms.MultipleChoiceField(choices=WEEK_CHOICES, widget=forms.CheckboxSelectMultiple())    class Meta:        model = Lottery    def __init__(self, *args, **kwargs):        super(LotteryAdminForm, self).__init__(*args, **kwargs)        self.fields["week_cycle"].widget = forms.CheckboxSelectMultiple(choices=WEEK_CHOICES)        self.fields["week_cycle"].initial = self.instance.week_cycle            def clean_week_cycle(self):        data = eval(self.cleaned_data['week_cycle'])        if data.__len__() == 0:            raise forms.ValidationError('Must choice week day.')        return ','.join(data)class LotteryAdmin(admin.ModelAdmin):    list_display = ('title', 'code')    fieldsets = [        ('General', {'fields': ['title', 'code', 'description', 'lotterytype', 'channel', 'sort', 'issue_rule']}),        ('Date information', {'fields': ['week_cycle', 'yearly_break_start', 'yearly_break_end']}),        ('Settings', {'fields': ['issue_set', 'number_rule']}),        ('Money Setting', {'fields': ['min_commission_gap', 'min_profit']}),    ]    search_fields = ['title']    form = LotteryAdminForm    #    def save_model(self, request, obj, form, change):#        if not obj.id:#            obj.created = datetime.datetime.now()##        obj.week_cycle = sum(map(int, request.POST.getlist('week_cycle')))#        obj.save()class MethodAdmin(admin.ModelAdmin):    list_display = ('title', 'lottery')    fieldsets = [        ('General', {'fields': ['title', 'lottery', 'description', 'is_closed']}),        ('Prize', {'fields': ['function_name']}),        ('Lock', {'fields': ['is_use_lock', 'init_lock_func', 'lock_table_name']}),        ('Settings', {'fields': ['no_count', 'level_count']}),        ('Money Setting', {'fields': ['max_lost', 'total_price']}),    ]    admin.site.register(Lottery, LotteryAdmin)admin.site.register(LotteryType)admin.site.register(Method, MethodAdmin)admin.site.register(Issue)